#usda 1.0

def Xform "Robot"
{
    def Scope "Materials"
    {
        def Material "Metal"
        {
            # Interface inputs drive shader parameters of the encapsulated network.
            # We are not showing the connections, nor how we encode that the
            # child Shader "Surface" is the primary output for the material.
            float inputs:diffuseGain = 0
            float inputs:specularRoughness = 0

            def Shader "Surface"
            {
                asset info:id = @PxrSurface@
				double foo = 2.0
            }
        }

        def Material "CorrodedMetal" (
            specializes = [</Robot/Materials/Metal>]
        )
        {
            # specialize roughness...
            float inputs:specularRoughness = 0.2

            # Adding a pattern to drive Surface bump
            def Shader "Corrosion"
            {
                asset info:id = @PxrOSL@
                vector3f outputs:disp
            }

            over "Surface"
            {
                # Override that would connect specularBump to Corrosion pattern's "outputs:disp" attribute
				double foo = 3.0
            }
        }
    }
}
